AWSTemplateFormatVersion: 2010-09-09
Description: >-
  AWS CloudFormation Sample Template LAMP_Single_Instance: Create a LAMP stack
  using a single EC2 instance and a local MySQL database for storage
  **WARNING** This template creates an Amazon EC2 instance.
  You will be billed for the AWS resources used if you create a stack from this template.

Metadata:
  AWS::CloudFormation::Interface:
    ParameterGroups:
      - Label:
          default: "Database settings"
        Parameters:
          - DBName
          - DBUser
          - DBPassword
          - DBRootPassword
      - Label:
          default: "Settings"
        Parameters:
          - SymfonyInstallation
          - PhpMyAdminInstallation
          - JenkinsInstallation
          - Typo3Installation
      - Label:
          default: "Symfony settings"
        Parameters:
          - ExistingSymfonyInstallation
          - GithubUser
          - GithubToken
          - GithubPath
      - Label:
          default: "EC2 Settings"
        Parameters:
          - InstanceType
          - KeyName
          - SSHLocation
    ParameterLabels:
      VPCID:
        default: "Cool new project is coming soon!"

Parameters:
  KeyName:
    Description: Name of an existing EC2 KeyPair to enable SSH access to the instance
    Type: 'AWS::EC2::KeyPair::KeyName'
    ConstraintDescription: must be the name of an existing EC2 KeyPair.
  DBName:
    Default: MyDatabase
    Description: MySQL database name
    Type: String
    MinLength: '1'
    MaxLength: '64'
    AllowedPattern: '[a-zA-Z][a-zA-Z0-9]*'
    ConstraintDescription: must begin with a letter and contain only alphanumeric characters.
  DBUser:
    Description: Username for MySQL database access
    Type: String
    MinLength: '1'
    MaxLength: '16'
    AllowedPattern: '[a-zA-Z][a-zA-Z0-9]*'
    ConstraintDescription: must begin with a letter and contain only alphanumeric characters.
  DBPassword:
    NoEcho: 'true'
    Description: Password for MySQL database access
    Type: String
    MinLength: '1'
    MaxLength: '41'
    AllowedPattern: '[a-zA-Z0-9]*'
    ConstraintDescription: must contain only alphanumeric characters.
  DBRootPassword:
    NoEcho: 'true'
    Description: Root password for MySQL
    Type: String
    MinLength: '1'
    MaxLength: '41'
    AllowedPattern: '[a-zA-Z0-9]*'
    ConstraintDescription: must contain only alphanumeric characters.
  SSHLocation:
    Description: ' The IP address range that can be used to SSH to the EC2 instances'
    Type: String
    MinLength: '9'
    MaxLength: '18'
    Default: 0.0.0.0/0
    AllowedPattern: '(\d{1,3})\.(\d{1,3})\.(\d{1,3})\.(\d{1,3})/(\d{1,2})'
    ConstraintDescription: must be a valid IP CIDR range of the form x.x.x.x/x.
  SymfonyInstallation:
    Default: true
    Description : 'Do you want to install a symfony project?'
    Type: String
    AllowedValues:
      - true
      - false
    ConstraintDescription: must be either true or false.
  PhpMyAdminInstallation:
    Default: true
    Description : 'Do you want to install phpMyAdmin?'
    Type: String
    AllowedValues:
      - true
      - false
    ConstraintDescription: must be either true or false'
  JenkinsInstallation:
    Default: false
    Description : 'Do you want to install jenkins?'
    Type: String
    AllowedValues:
      - true
      - false
    ConstraintDescription: must be either true or false.
  Typo3Installation:
    Default: false
    Description : 'Do you want to install TYPO3?'
    Type: String
    AllowedValues:
      - true
      - false
    ConstraintDescription: must be either true or false.
  ExistingSymfonyInstallation:
    Default: false
    Description : 'Do you want to take an existing project from github otherwise a new symfony project will be created.'
    Type: String
    AllowedValues:
      - true
      - false
    ConstraintDescription: must be either true or false.
  GithubUser:
    Description: User for GitHub access (only if you want to install an existing Project)
    Type: String
    MinLength: '0'
    MaxLength: '41'
    AllowedPattern: '[a-zA-Z0-9]*'
    ConstraintDescription: must contain only alphanumeric characters.
  GithubToken:
    Description: Token for GitHub access (only if you want to install an existing Project)
    Type: String
    MinLength: '0'
    MaxLength: '41'
  GithubPath:
    Description: GitHubPath (only if you want to install an existing Project)
    Type: String
    MinLength: '0'
    MaxLength: '80'
  InstanceType:
    Description: WebServer EC2 instance type
    Type: String
    Default: t2.nano
    AllowedValues:
    - t1.micro
    - t2.nano
    - t2.micro
    - t2.small
    - t2.medium
    - t2.large
    - m1.small
    - m1.medium
    - m1.large
    - m1.xlarge
    - m2.xlarge
    - m2.2xlarge
    - m2.4xlarge
    - m3.medium
    - m3.large
    - m3.xlarge
    - m3.2xlarge
    - m4.large
    - m4.xlarge
    - m4.2xlarge
    - m4.4xlarge
    - m4.10xlarge
    - c1.medium
    - c1.xlarge
    - c3.large
    - c3.xlarge
    - c3.2xlarge
    - c3.4xlarge
    - c3.8xlarge
    - c4.large
    - c4.xlarge
    - c4.2xlarge
    - c4.4xlarge
    - c4.8xlarge
    - g2.2xlarge
    - g2.8xlarge
    - r3.large
    - r3.xlarge
    - r3.2xlarge
    - r3.4xlarge
    - r3.8xlarge
    - i2.xlarge
    - i2.2xlarge
    - i2.4xlarge
    - i2.8xlarge
    - d2.xlarge
    - d2.2xlarge
    - d2.4xlarge
    - d2.8xlarge
    - hi1.4xlarge
    - hs1.8xlarge
    - cr1.8xlarge
    - cc2.8xlarge
    - cg1.4xlarge
    ConstraintDescription: must be a valid EC2 instance type.
    
Resources:
  WebServerInstance:
    Type: 'AWS::EC2::Instance'
    Properties:
      ImageId: ami-0caef02b518350c8b
      InstanceType: !Ref InstanceType
      SecurityGroups:
        - !Ref WebServerSecurityGroup
      Tags:
        - Key: Name
          Value: Ubuntu22.04 Web + SSH Server
      KeyName: !Ref KeyName
      UserData:
        'Fn::Base64':
          !Sub |
          #!/bin/bash
          
          if [ ${Typo3Installation} == "true" ]
          then
           sudo curl https://raw.githubusercontent.com/LuminiCode/aws-cloudformation-ubuntu-lamp-symfony/master/scripts/lamp-typo3 -o /lamp-typo3
            # GitHub data have to be at the end and use Token
            sudo chmod +x /lamp-typo3
            /./lamp-typo3 ${AWS::StackName} ${DBUser} ${DBPassword} ${DBName} ${DBRootPassword} ${SymfonyInstallation} ${PhpMyAdminInstallation} ${JenkinsInstallation} ${ExistingSymfonyInstallation} ${GithubUser} ${GithubToken} ${GithubPath} ${Typo3Installation}
            rm -r /lamp-typo3
          else
            sudo curl https://raw.githubusercontent.com/LuminiCode/aws-cloudformation-ubuntu-lamp-symfony/master/scripts/lamp -o /lamp
            # GitHub data have to be at the end and use Token
            sudo chmod +x /lamp
            /./lamp ${AWS::StackName} ${DBUser} ${DBPassword} ${DBName} ${DBRootPassword} ${SymfonyInstallation} ${PhpMyAdminInstallation} ${JenkinsInstallation} ${ExistingSymfonyInstallation} ${GithubUser} ${GithubToken} ${GithubPath} ${Typo3Installation}
            rm -r /lamp
          fi

  WebServerSecurityGroup:
    Type: 'AWS::EC2::SecurityGroup'
    Properties:
      GroupDescription: Enable HTTP access via port 80 and 8080 for example for jenkins
      SecurityGroupIngress:
        - IpProtocol: tcp
          FromPort: '80'
          ToPort: '80'
          CidrIp: 0.0.0.0/0
        - IpProtocol: tcp
          FromPort: '8080'
          ToPort: '8080'
          CidrIp: 0.0.0.0/0
        - IpProtocol: tcp
          FromPort: '22'
          ToPort: '22'
          CidrIp: !Ref SSHLocation
Outputs:
  WebsiteURL:
    Description: URL for newly created LAMP stack
    Value: !Join
      - ''
      - - 'http://'
        - !GetAtt
          - WebServerInstance
          - PublicDnsName
